#include <bits/stdc++.h>
using namespace std;

#define shuru int main(void){
#define shesh return 0;}
#define RZ return 0;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define pob pop_back
#define mpr make_pair
#define lp(n) for(int i=0; i<n; ++i)
#define spc " "
#define tab "\t"
#define nl cout<<endl
#define RZ return 0
typedef long long int lli;

shuru;


shesh;




//calculating all divisors & prime divisors

#include <bits/stdc++.h>
using namespace std;

vector<int> findDiv(int n){
    vector<int> v;
    for(int i=1; i*i<n; ++i){
        if(n%i == 0)
        {
            int j = n/i;
            if(i<j)
                v.push_back(i), v.push_back(j);
            else if(i==j)
                v.push_back(i);
        }
    }
    sort(v.begin(), v.end());
    return v;
}

vector<int> findPrimeDiv(int N){
    vector<int> v;
    int n = N;
    for(int i=2; i*i<=N; ++i){
        if(n%i==0){
            v.push_back(i);
            while(n%i==0)
                n/=i;
        }
    }
    
    if(n>1)
        v.push_back(n);
    
    return v;
}



//calculating gcd & lcm

int gcd(int x, int y){
    while(x%y){
        int temp = x%y;
        x = y;
        y = temp;
    }
    return y;
}

int lcm(int x, int y){
    return (x*y)/gcd(x, y);
}



//Sieve of Eretosthenes

vector<int> sieveOfEretosthenes(int n){
    int N = n+1, i=2;
    int a[N] = {0};
    vector<int> v;
    
    for(; i*i<N; ++i){
        if(!a[i]){
            v.push_back(i);
            for(int j=2*i; j<N; j+=i)
                a[j] = 1;
        }
    }
    
    for(; i<N; ++i){
        if(!a[i])
            v.push_back(i);
    }
    
    return v;
}




//calculating mod

lli modPow(lli n, lli p, lli x){
    if(p == 1){
        return n%x;
    }
    
    if(p%2)
        return (modPow(n, p/2, x) * modPow(n, p/2 + 1, x))%x;
    else 
        return (modPow(n, p/2, x) * modPow(n, p/2, x))%x;
}







